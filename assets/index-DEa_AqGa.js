var p=Object.defineProperty;var A=(i,e,t)=>e in i?p(i,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[e]=t;var o=(i,e,t)=>A(i,typeof e!="symbol"?e+"":e,t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))r(s);new MutationObserver(s=>{for(const n of s)if(n.type==="childList")for(const a of n.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&r(a)}).observe(document,{childList:!0,subtree:!0});function t(s){const n={};return s.integrity&&(n.integrity=s.integrity),s.referrerPolicy&&(n.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?n.credentials="include":s.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function r(s){if(s.ep)return;s.ep=!0;const n=t(s);fetch(s.href,n)}})();class y{constructor(e){o(this,"baudrate",9600);o(this,"buffer_size",1024*1024);o(this,"traceLog","");o(this,"lastTraceTime",Date.now());o(this,"tracing",!0);o(this,"leftOver",new Uint8Array(0));o(this,"reader");o(this,"slipReaderEnabled",!0);o(this,"trace_dom_log",!0);this.device=e,console.log("SerialTransport intialized")}_appendBuffer(e,t){const r=new Uint8Array(e.byteLength+t.byteLength);return r.set(new Uint8Array(e),0),r.set(new Uint8Array(t),e.byteLength),r.buffer}async read(e=0,t=12){let r,s=this.leftOver;if(this.leftOver=new Uint8Array(0),this.slipReaderEnabled){const n=this.slipReader(s);if(n.length>0)return n;s=this.leftOver,this.leftOver=new Uint8Array(0)}if(this.device.readable==null)return this.leftOver;this.reader=this.device.readable.getReader();try{e>0&&(r=setTimeout(()=>{this.reader&&this.reader.cancel()},e));do{if(!this.reader)throw new Error("Reader is undefined");const{value:n,done:a}=await this.reader.read();if(a&&(this.leftOver=s,console.log("Timeout")),!n)break;s=new Uint8Array(this._appendBuffer(s.buffer,n.buffer))}while(s.length<t)}finally{if(e>0&&clearTimeout(r),!this.reader)throw new Error("Reader is undefined");this.reader.releaseLock()}if(this.tracing&&(console.log("Read bytes"),this.trace(`Read ${s.length} bytes: ${this.hexConvert(s)}`)),this.slipReaderEnabled){const n=this.slipReader(s);return this.tracing&&(console.log("Slip reader results"),this.trace(`Slip Read ${n.length} bytes: ${this.hexConvert(n)}`)),n}return s}slipReader(e){let a=[],c=!1;for(const E of e)E!==15968&&(E===219?c=!0:c?(E===220?a.push(15968):E===221&&a.push(219),c=!1):a.push(E));return new Uint8Array(a)}trace(e){const s=`${`TRACE ${(Date.now()-this.lastTraceTime).toFixed(3)}`} ${e}`;if(console.log(s),this.traceLog+=s+`
`,this.trace_dom_log){const n=document.querySelector("#traceLog");n&&(n.value=this.traceLog,n.scrollTop=n.scrollHeight)}}hexify(e){return Array.from(e).map(t=>t.toString(16).padStart(2,"0")).join("").padEnd(16," ")}hexConvert(e,t=!0){if(t&&e.length>16){let r="",s=e;for(;s.length>0;){const n=s.slice(0,16),a=String.fromCharCode(...n).split("").map(c=>c===" "||c>=" "&&c<="~"&&c!=="  "?c:".").join("");s=s.slice(16),r+=`
    ${this.hexify(n.slice(0,8))} ${this.hexify(n.slice(8))} | ${a}`}return r}else return this.hexify(e)}debug(e,t,r=!0,s=!0,n="#console"){if(r&&console.log(e,t),s){const a=document.querySelector(`${n}`);a&&(a.value+=e+`
`,a.scrollTop=a.scrollHeight)}}async sleep(e){return new Promise(t=>setTimeout(t,e))}async connect(e=this.baudrate){try{await this.device.open({baudRate:e,bufferSize:this.buffer_size}),this.debug("Device Connected"),this.leftOver=new Uint8Array(0)}catch(t){this.debug("Error in connect",t)}}async disconnect(){try{await this.device.close(),this.debug("Device Disconnected")}catch(e){this.debug("Error in disconnect",e)}}async send(e){if(this.device.writable){const t=this.device.writable.getWriter();await t.write(e),this.tracing&&this.trace(`Write ${e.length} bytes: ${this.hexConvert(e)}`),t.releaseLock()}}mergeSections(e){e.sort((a,c)=>a.offset-c.offset);const t=e[0].offset,s=e[e.length-1].offset+e[e.length-1].value.length-t,n=new Uint8Array(s);for(const a of e){const c=a.offset-t;n.set(a.value,c)}return n}async readIHex(e){console.log("read intel hex");const t=[];let r=0;const s=e.split(`
`);for(const n of s)if(n.startsWith(":")){const a=this.parseIHexRecord(n);switch(a.type){case"00":const c=r+a.offset;t.push({offset:c,value:a.data});break;case"01":break;case"02":r=a.address*16;break;case"03":break;case"04":r=a.address<<16;break}}return this.mergeSections(t)}parseIHexRecord(e){const t=parseInt(e.substr(1,2),16),r=parseInt(e.substr(3,4),16),s=e.substr(7,2),n=new Uint8Array(t);for(let c=0;c<t;c++)n[c]=parseInt(e.substr(9+c*2,2),16);const a=parseInt(e.substr(9,4),16);return{type:s,offset:r,data:n,address:a}}async receive(e=0){if(this.leftOver.length!=0){const r=this.leftOver;return this.leftOver=new Uint8Array(0),r}if(!this.device.readable)return this.leftOver;this.reader=this.device.readable.getReader();let t;try{if(e>0&&(t=setTimeout(()=>{this.reader&&this.reader.cancel()},e)),!this.reader)throw new Error("Reader is undefined");const{value:r,done:s}=await this.reader.read();return console.log("Raw Read bytes",r),s?r||new Uint8Array(0):(this.tracing&&(console.log("Raw Read bytes"),this.trace(`Read ${r.length} bytes: ${this.hexConvert(r)}`)),r)}finally{if(e>0&&clearTimeout(t),!this.reader)throw new Error("Reader is undefined");this.reader.releaseLock()}}}var _=(i=>(i[i.ALIGN_DEFAULT=0]="ALIGN_DEFAULT",i[i.ALIGN_TOP_LEFT=1]="ALIGN_TOP_LEFT",i[i.ALIGN_TOP_MID=2]="ALIGN_TOP_MID",i[i.ALIGN_TOP_RIGHT=3]="ALIGN_TOP_RIGHT",i[i.ALIGN_BOTTOM_LEFT=4]="ALIGN_BOTTOM_LEFT",i[i.ALIGN_BOTTOM_MED=5]="ALIGN_BOTTOM_MED",i[i.ALIGN_BOTTOM_RIGHT=6]="ALIGN_BOTTOM_RIGHT",i[i.ALIGN_LEFT_MID=7]="ALIGN_LEFT_MID",i[i.ALIGN_RIGHT_MID=8]="ALIGN_RIGHT_MID",i[i.ALIGN_CENTER=9]="ALIGN_CENTER",i))(_||{}),f=(i=>(i[i.BSL_ACK=0]="BSL_ACK",i[i.BSL_ERROR_HEADER_INCORRECT=81]="BSL_ERROR_HEADER_INCORRECT",i[i.BSL_ERROR_CHECKSUM_INCORRECT=82]="BSL_ERROR_CHECKSUM_INCORRECT",i[i.BSL_ERROR_PACKET_SIZE_ZERO=83]="BSL_ERROR_PACKET_SIZE_ZERO",i[i.BSL_ERROR_PACKET_SIZE_TOO_BIG=84]="BSL_ERROR_PACKET_SIZE_TOO_BIG",i[i.BSL_ERROR_UNKNOWN_ERROR=85]="BSL_ERROR_UNKNOWN_ERROR",i[i.BSL_ERROR_UNKNOWN_BAUD_RATE=86]="BSL_ERROR_UNKNOWN_BAUD_RATE",i))(f||{});class l{static softwareCRC(e,t){let r=4294967295;for(let s=0;s<t;s++){let n=e[s];r=r^n;for(let a=0;a<8;a++){const c=-(r&1);r=r>>>1^this.CRC32_POLYNOMIAL&c}}return r=r>>>0,new Uint8Array([r&255,r>>>8&255,r>>>16&255,r>>>24&255])}static async getFrameRaw(e){switch(e.type){case"Connection":{const t=this.softwareCRC(new Uint8Array([this.CONNECTION]),1);return new Uint8Array([this.HEADER,1,0,this.CONNECTION,...t])}case"StartApp":{const t=this.softwareCRC(new Uint8Array([this.START_APP]),1);return new Uint8Array([this.HEADER,1,0,this.START_APP,...t])}case"GetDeviceInfo":{const t=this.softwareCRC(new Uint8Array([this.GET_DEVICE_INFO]),1);return new Uint8Array([this.HEADER,1,0,this.GET_DEVICE_INFO,...t])}case"MassErase":{const t=this.softwareCRC(new Uint8Array([this.MASS_ERASE]),1);return new Uint8Array([this.HEADER,1,0,this.MASS_ERASE,...t])}case"ProgramData":{const t=e.data,r=[e.start_address>>24&255,e.start_address>>16&255,e.start_address>>8&255,e.start_address&255],s=t.length+4+1,n=this.softwareCRC(new Uint8Array([this.PROGRAM_DATA,...r,...t]),s);return new Uint8Array([this.HEADER,s&255,s>>8,this.PROGRAM_DATA,...r,...t,...n])}case"UnlockBootloader":{const t=e.data;if(t.length!=32)throw new Error("Data length should be 32");const r=t.length+1,s=this.softwareCRC(new Uint8Array([this.UNLOCK_BOOTLOADER,...t]),r);return new Uint8Array([this.HEADER,r&255,r>>8,this.UNLOCK_BOOTLOADER,...t,...s])}case"MemoryRead":{const t=e.data;if(t.length!=4)throw new Error("Data length should be 4");const r=[e.start_address>>24&255,e.start_address>>16&255,e.start_address>>8&255,e.start_address&255],s=t.length+4+1,n=this.softwareCRC(new Uint8Array([this.MEMORY_READ,...r,...t]),s);return new Uint8Array([this.HEADER,s&255,s>>8,this.MEMORY_READ,...r,...t,...n])}default:throw new Error("Unimplemented command")}}static getResponse(e,t){switch(t.type){case"Connection":case"StartApp":return{type:t.type,response:e[0]};case"MassErase":case"ProgramData":case"UnlockBootloader":return{type:t.type,response:e[5]};case"GetDeviceInfo":return{type:t.type,response:e[5],CMD_interpreter_version:e[this.OFFSET_BYTE+2]<<8|e[this.OFFSET_BYTE+1],build_id:e[this.OFFSET_BYTE+4]<<8|e[this.OFFSET_BYTE+3],app_version:e[this.OFFSET_BYTE+8]<<24|e[this.OFFSET_BYTE+7]<<16|e[this.OFFSET_BYTE+6]<<8|e[this.OFFSET_BYTE+5],active_plugin_interface_version:e[this.OFFSET_BYTE+10]<<8|e[this.OFFSET_BYTE+9],BSL_max_buffer_size:e[this.OFFSET_BYTE+12]<<8|e[this.OFFSET_BYTE+11],BSL_buffer_start_address:e[this.OFFSET_BYTE+16]<<24|e[this.OFFSET_BYTE+15]<<16|e[this.OFFSET_BYTE+14]<<8|e[this.OFFSET_BYTE+13],BCR_config_id:e[this.OFFSET_BYTE+20]<<24|e[this.OFFSET_BYTE+19]<<16|e[this.OFFSET_BYTE+18]<<8|e[this.OFFSET_BYTE+17],BSL_config_id:e[this.OFFSET_BYTE+24]<<24|e[this.OFFSET_BYTE+23]<<16|e[this.OFFSET_BYTE+22]<<8|e[this.OFFSET_BYTE+21]};default:throw new Error("Unimplemented command")}}}o(l,"HEADER",128),o(l,"CONNECTION",18),o(l,"UNLOCK_BOOTLOADER",33),o(l,"FLASH_RANGE_ERASE",35),o(l,"MASS_ERASE",21),o(l,"PROGRAM_DATA",32),o(l,"PROGRAM_DATA_FAST",36),o(l,"MEMORY_READ",41),o(l,"FACTORY_RESET",48),o(l,"GET_DEVICE_INFO",25),o(l,"STANDALONE_VERIFY",49),o(l,"START_APP",64),o(l,"CRC32_POLYNOMIAL",3988292384),o(l,"INITIAL_SEED",4294967295),o(l,"OFFSET_BYTE",4);class L extends y{constructor(t){super(t);o(this,"BSL_TRY",0);o(this,"BSL_TRY_MAX",10);o(this,"DEFAULT_TIMEOUT",2e3);o(this,"conn_established",!1);o(this,"FLASH_START_ADDRESS",0);o(this,"FLASH_MAX_BUFFER_SIZE",0);o(this,"BSL_PW_RESET",[255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255]);o(this,"MEMORY_READ_RESPONSE",48);o(this,"DEVICE_INFO_RESPONSE",49);o(this,"STANDALONE_VERIFY_RESPONSE",50);o(this,"MESSAGE_RESPONSE",59);o(this,"ERROR_RESPONSE",58);o(this,"ESP_CMD",{BSL_ENBL:["B","S","L"],OLED_CLR:["O","L","D","R","S","T"],OLED_ON:["O","L","D","O","N"],OLED_OFF:["O","L","D","O","F","F"],OLED_PRINT:["O","L","D","W","R","T"]})}sa2a(t){let r=new Uint8Array(t.length);for(let s=0;s<t.length;s++)r[s]=t[s].charCodeAt(0);return r}s2a(t){let r=new Uint8Array(t.length);for(let s=0;s<t.length;s++)r[s]=t.charCodeAt(s);return r}async enableBSL(){await this.send(new Uint8Array(this.sa2a(this.ESP_CMD.BSL_ENBL))),await this.read(this.DEFAULT_TIMEOUT,5),await this.sleep(100)}async control_esp_oled(t){await this.send(this.sa2a(t)),await this.receive()}async establish_conn(){this.BSL_TRY++,this.debug("Enabling BSL Mode..."),await this.enableBSL();let t={type:"Connection"},r=await l.getFrameRaw(t);await this.send(r);let s=await this.read(this.DEFAULT_TIMEOUT*2,1),n=l.getResponse(s,t);if(n.response==f.BSL_ACK)await this.esp_oled_print("BSL Mode Enabled",_.ALIGN_BOTTOM_LEFT,0,0),this.BSL_TRY=0,this.conn_established=!0,this.debug("BSL Mode Enabled"),await this.get_device_info();else{if(this.debug("BSL Mode Enable Failed",n.response),this.BSL_TRY<this.BSL_TRY_MAX){this.debug(`Retrying...(attempt : ${this.BSL_TRY})`),await this.establish_conn();return}throw this.conn_established=!1,new Error("BSL Mode Enable Failed")}}check_crc(t){const r=t[3]<<8|t[2],s=t.slice(4,3+r),n=l.softwareCRC(s,r),a=n[0]<<24|n[1]<<16|n[2]<<8|n[3],c=t[t.length-4]<<24|t[t.length-3]<<16|t[t.length-2]<<8|t[t.length-1];if(a!=c)throw this.debug("CRC Check Failed"),new Error("CRC Check Failed");return!0}async esp_oled_print(t,r=_.ALIGN_DEFAULT,s=0,n=0,a=!0){a&&(await this.send(new Uint8Array(this.sa2a(this.ESP_CMD.OLED_CLR))),await this.read(this.DEFAULT_TIMEOUT,8));let c=new Uint8Array([...this.sa2a(this.ESP_CMD.OLED_PRINT),r,s,n,...this.s2a(t)]);await this.send(c),await this.read(this.DEFAULT_TIMEOUT,5)}async get_device_info(){this.conn_established||this.establish_conn();const t={type:"GetDeviceInfo"},r=await l.getFrameRaw(t);await this.send(r);const s=await this.read(this.DEFAULT_TIMEOUT,33),n=this.slipReader(s);this.check_crc(n);let a=l.getResponse(n,t);a.response==f.BSL_ACK&&a.type=="GetDeviceInfo"?(this.FLASH_MAX_BUFFER_SIZE=a.BSL_max_buffer_size,this.FLASH_START_ADDRESS=a.BSL_buffer_start_address,this.debug(`Device Info:
        CMD_interpreter_version: 0x${a.CMD_interpreter_version.toString(16)}
        build_id: 0x${a.build_id.toString(16)}
        app_version: 0x${a.app_version.toString(16)}
        active_plugin_interface_version: 0x${a.active_plugin_interface_version.toString(16)}
        BSL_max_buffer_size: 0x${a.BSL_max_buffer_size.toString(16)}
        BSL_buffer_start_address: 0x${a.BSL_buffer_start_address.toString(16)}
        BCR_config_id: 0x${a.BCR_config_id.toString(16)}
        BSL_config_id: 0x${a.BSL_config_id.toString(16)}`),await this.unlock_bootloader()):this.debug("Device Info Failed",a.response)}async unlock_bootloader(){this.conn_established||await this.establish_conn(),this.debug("Unlocking Bootloader ...");let t={type:"UnlockBootloader",data:new Uint8Array(this.BSL_PW_RESET)},r=await l.getFrameRaw(t);await this.send(r);let s=await this.read(this.DEFAULT_TIMEOUT,10),n=l.getResponse(s,t);if(n.response==f.BSL_ACK)this.debug("Bootloader Unlocked");else throw this.debug("Bootloader Unlock Failed",n.response),new Error("Bootloader Unlock Failed")}async mass_earse(){this.conn_established||await this.establish_conn(),await this.esp_oled_print("Erasing ...",_.ALIGN_TOP_LEFT,0,0),this.debug("Mass Erasing ...");let t={type:"MassErase"},r=await l.getFrameRaw(t);await this.send(r),console.log("send is",this.hexify(r));let s=await this.read(this.DEFAULT_TIMEOUT,10),n=l.getResponse(s,t);n.response==f.BSL_ACK?(this.debug("Mass Erase Done"),await this.esp_oled_print("Erase Done",_.ALIGN_BOTTOM_LEFT,0,0)):(this.conn_established=!1,this.debug("Mass Erase Failed",n.response),await this.esp_oled_print("Erase Failed",_.ALIGN_BOTTOM_LEFT,0,0))}async program_data(t){this.conn_established||await this.establish_conn(),await this.esp_oled_print("Flashing...",_.ALIGN_BOTTOM_LEFT,0,0),await this.esp_oled_print("[=====100%=====]",_.ALIGN_LEFT_MID,0,0,!1);const n={type:"ProgramData",start_address:0,data:await this.readIHex(t)};let a=await l.getFrameRaw(n);await this.send(a);let c=await this.read(this.DEFAULT_TIMEOUT,10),E=l.getResponse(c,n);if(E.response==f.BSL_ACK)this.debug("Data Programmed"),await this.esp_oled_print("Firmware Flashed",_.ALIGN_BOTTOM_LEFT,0,0);else throw this.conn_established=!1,await this.esp_oled_print("Error Flashing",_.ALIGN_BOTTOM_LEFT,0,0),this.debug("Data Program Failed",E.response),new Error("Data Program Failed")}async read_memory(){this.conn_established||await this.establish_conn(),await this.esp_oled_print("Reading...",_.ALIGN_BOTTOM_LEFT,0,0);let t=new Uint8Array([128,9,0,41,0,12,0,0,8,0,0,0,50,157,176,53]);await this.send(t),this.receive()}async flash_earse_range(){this.debug("to be implemneted ")}async start_app(){this.conn_established||this.establish_conn();let t={type:"StartApp"},r=await l.getFrameRaw(t);await this.send(r);let s=await this.read(this.DEFAULT_TIMEOUT,1),n=l.getResponse(s,t);n.response==f.BSL_ACK?(this.conn_established=!1,await this.esp_oled_print("App Started",_.ALIGN_BOTTOM_LEFT,0,0),this.debug("App Started")):this.debug("App Start Failed",n.response)}}let h=!1,w,d,u;const S=[{usbVendorId:12346,usbProductId:4097},{usbVendorId:45488,usbProductId:32853}];function b(i){i.addEventListener("click",()=>{if(h&&d){d.disconnect(),i.innerHTML="Connect",h=!1;return}navigator.serial.requestPort({filters:S}).then(async e=>{d=await new L(e),await d.connect(),i.innerHTML="disconnect",h=!0}).catch(e=>{console.error(e),d.debug("Error Connecting"),w.disconnect(),i.innerHTML="Connect",h=!1})})}function F(i){i.addEventListener("click",async()=>{if(!h){d.debug("Please Connect First");return}i.innerHTML="Erasing...";try{await d.mass_earse()}catch(e){console.log(e),d.debug("Error Erasing")}i.innerHTML="Mass Erase"})}function O(i){i.addEventListener("click",async()=>{if(!h){d.debug("Please Connect First");return}if(!u){d.debug("Please upload a .Hex file first");return}i.innerHTML="Flashing...";try{await d.program_data(u),d.debug("Flashing Done")}catch{d.debug("Error Flashing")}i.innerHTML="Flash"})}function I(i){i.addEventListener("click",async()=>{if(!h){d.debug("Please Connect First");return}i.innerHTML="Verifying...";try{await d.read_memory()}catch(e){console.log(e),d.debug("Error Verifying")}i.innerHTML="Verify"})}function R(i){return new Promise((e,t)=>{const r=new FileReader;r.onload=()=>e(r.result),r.onerror=t,r.readAsText(i,"utf-8")})}function C(i){i.addEventListener("change",async e=>{u="";const t=e.target.files[0];t&&t.name.endsWith(".hex")?(u=await R(t),console.log(u)):d.debug("Please upload a valid .hex file")})}function v(i){i.addEventListener("click",async()=>{if(!h){d.debug("Please Connect First");return}i.innerHTML="Resting...",await d.start_app(),i.innerHTML="Reset"})}function B(i){i.addEventListener("click",async()=>{if(!h){d.debug("Please Connect First");return}i.innerHTML="Getting Device Info...";try{await d.establish_conn()}catch(e){console.log(e),d.debug("Error Getting Device Info")}i.innerHTML="Get Device Info"})}function M(i,e,t){i.addEventListener("dragover",r=>{r.preventDefault(),i.style.borderColor="#646cff"}),i.addEventListener("dragleave",()=>{i.style.borderColor="#ccc"}),i.addEventListener("drop",async r=>{if(r.preventDefault(),i.style.borderColor="#ccc",!r.dataTransfer)return;const s=r.dataTransfer.files;s.length>0&&(t.style.display="block",e.files=s,s&&s[0].name.endsWith(".hex")?(u=await R(s[0]),console.log(u)):d.debug("Please upload a valid .hex file"))})}document.querySelector("#app").innerHTML=`
<h1>MSPMO Flasher via UART</h1>
<h4>Supported Browsers: Chrome, Edge</h4>
<div class="container">
  <div class="left">
    <button id="connect" type="button">Connect</button>
    <input type="file" id="myfile" name="myfile" accept=".hex">
    <div id="dropZone" style="border: 2px dashed #ccc; padding: 10px; margin-top: 10px;">
      Drag and drop your file here
    </div>
    <div id="dropMessage" style="margin-top: 10px; color: green; display: none;">
      File has been uploaded successfully!
    </div><br><br>
    <input type="checkbox" id="toggleTraceLog" checked> Enable Trace Log
    <button id="getDeviceInfo" type="button">Get Device Info</button>
    <button id="erase" type="button">Mass Erase</button>
    <button id="flash" type="button">Flash</button>
    <button id="reset" type="button">Reset</button>
    <button id="verify" type="button">Verify</button>
    <textarea id="console" rows="15" cols="50" readonly></textarea>
  </div>
  <div id ="trace" class="right">
    <h4>Trace Log</h4>
    <textarea id="traceLog" rows="20" cols="50" readonly></textarea>
  </div>
</div>
`;const g=document.getElementById("toggleTraceLog"),T=document.getElementById("trace");console.log("trace",T,g);g&&T&&g.addEventListener("change",function(){T.style.display=="none"?T.style.display="inline":T.style.display="none"});b(document.querySelector("#connect"));B(document.querySelector("#getDeviceInfo"));F(document.querySelector("#erase"));O(document.querySelector("#flash"));C(document.querySelector("#myfile"));v(document.querySelector("#reset"));I(document.querySelector("#verify"));M(document.querySelector("#dropZone"),document.querySelector("#myfile"),document.querySelector("#dropMessage"));
